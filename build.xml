<?xml version="1.0"?>
<project>

  <property environment="ENV" />
  <property file=".local/build.properties" />
  
  <taskdef name="coffee" classname="csat.CoffeeScriptCTask">
    <classpath>
      <pathelement path="${jsat.jar}" />
      <pathelement path="${rhino.jar}" />
    </classpath>
  </taskdef>
  
  <taskdef name="compressor" classname="net.noha.tools.ant.yuicompressor.tasks.YuiCompressorTask">
    <classpath>
      <pathelement path="${jsat.jar}" />
      <pathelement path="${yuicompressor.jar}" />
    </classpath>
  </taskdef>

  <target name="init" description="Initializes directory layout">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${build.classes.dir}" />
    <mkdir dir="${build.output.dir}" />
    <mkdir dir="${dist.dir}" />
    <copy todir="${build.classes.dir}">
      <fileset dir="${lib.dir}" />
    </copy>
  </target>

  <target name="clean" description="Removes all build artefacts">
    <delete dir="${build.dir}" />
    <delete dir="${dist.dir}" />
  </target> 
  
  <target name="compile" depends="init" description="Compiles the sources">
    <coffee destDir="${build.classes.dir}" includes="src/*.coffee" noWrap="true" verbose="true" />    
    <coffee destDir="${build.classes.dir}" includes="test/*.t"     noWrap="true" verbose="true" />    
  </target>

  <target name="compress" description="Compresses the result">
    <compressor warn="false" munge="true" jsSuffix=".js" preserveAllSemiColons="false" fromDir="${build.output.dir}" toDir="${dist.dir}">
      <include name="*.js" />
    </compressor>
  </target> 
  
  <filelist id="common" dir="${build.classes.dir}" files="
    ludi.js 
    sprintf.js 
    log.js 
    db.js 
    sql.js 
    wish.js 
    wish_table_data.js 
    wish_table_data_rooted.js 
    wish_table_columns.js
    wish_table_keys.js
    model.js 
  "/>
  
  <filelist id="sqlite" dir="${build.classes.dir}" files="
    db_sqlite.js 
    db_sqlite_wish_table_columns.js 
    db_sqlite_wish_table_keys.js
  "/>

  <filelist id="mysql" dir="${build.classes.dir}" files="
    db_mysql.js 
    db_mysql_wish_table_columns.js 
    db_mysql_wish_table_keys.js
  "/>

  <filelist id="json" dir="${build.classes.dir}" files="
    json2.js 
  "/>

  <filelist id="rhino" dir="${build.classes.dir}" files="
    js_rhino.js 
  "/>

  <filelist id="v8cgi" dir="${build.classes.dir}" files="
    js_v8_v8cgi.js
    js_v8cgi_mysql_sqlite.js
  "/>

  <filelist id="ms" dir="${build.classes.dir}" files="
    js_ms.js 
  "/>

  <filelist id="node" dir="${build.classes.dir}" files="
    js_v8_node.js
    js_node_server.js
  "/>

  <filelist id="tests" dir="${build.classes.dir}" files="
    testing.js
    0010_string.js
    0020_is_array.js
    0030_model_update.js
    0040_db.js
    0050_put.js
    0060_sql.js
  "/>

  <target name="build_test">
    <concat destfile="${build.output.dir}/test.js">
      <filelist dir="${build.output.dir}" files="ludi.js" />
      <filelist dir=".local" files="test_init.js" />
      <filelist refid="tests" />
    </concat>
  </target>

  <target name="build_and_run_test">
    <antcall target="compress" />
    <antcall target="build_test" />
    <exec command="${cmd}" />
  </target>

  <target name="build_rhino_mysql" depends="compile">
    <concat destfile="${lib.file}">
      <filelist refid="json"   />
      <filelist refid="common" />
      <filelist refid="mysql"  />
      <filelist refid="rhino"  />
      <filelist dir="${build.classes.dir}" files="js_rhino_mysql.js" />
    </concat>
    <antcall target="build_and_run_test">
      <param name="cmd" value="${bin.rhino} ${test.file}" />
    </antcall>
  </target>

  <target name="build_ms_mysql" depends="compile">
    <concat destfile="${lib.file}">
      <filelist refid="json"   />
      <filelist refid="common" />
      <filelist refid="mysql"  />
      <filelist refid="ms"  />
      <filelist dir="${build.classes.dir}" files="js_ms_mysql.js" />
    </concat>
    <antcall target="build_and_run_test">
      <param name="cmd" value="${bin.browser} http://127.0.0.1/" />
    </antcall>
  </target>

  <target name="build_v8cgi_mysql" depends="compile">
    <concat destfile="${lib.file}">
      <filelist refid="common" />
      <filelist refid="mysql"  />
      <filelist refid="v8cgi"  />
      <filelist dir="${build.classes.dir}" files="js_v8cgi_mysql.js" />
    </concat>
    <antcall target="build_and_run_test">
      <param name="cmd" value="${test.cmd.v8cgi}" />
    </antcall>
  </target>

  <target name="build_v8cgi_sqlite" depends="compile">
    <concat destfile="${lib.file}">
      <filelist refid="common" />
      <filelist refid="sqlite"  />
      <filelist refid="v8cgi"  />
      <filelist dir="${build.classes.dir}" files="js_v8cgi_sqlite.js" />
    </concat>
    <antcall target="build_and_run_test">
      <param name="cmd" value="${test.cmd.v8cgi}" />
    </antcall>
  </target>

  <target name="build_node_mysql" depends="compile">
    <concat destfile="${lib.file}">
      <filelist refid="common" />
      <filelist refid="mysql"  />
      <filelist refid="node"  />
      <filelist dir="${build.classes.dir}" files="js_node_mysql.js" />
    </concat>
    <antcall target="build_and_run_test">
      <param name="cmd" value="${test.cmd.node}" />
    </antcall>
  </target>

</project>